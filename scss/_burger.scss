// Burger parts
//
// (---) top    -> &::before
// [---] middle -> &
// (---) bottom -> &::after
// Vendor prefixes
$sass-burger-add-vendor-prefixes: true !default;
// Burger
@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {
	$burger-height: $height !global;
	$burger-gutter: $gutter !global;
	position: relative;
	margin-top: $height + $gutter;
	margin-bottom: $height + $gutter;
	@if $sass-burger-add-vendor-prefixes {
		-moz-user-select: none;
		-ms-user-select: none;
		-webkit-user-select: none;
		user-select: none;
	}

	&,
	&::after,
	&::before {
		background-color: $color;
		display: block;
		height: $height;
		transition-duration: $transition-duration;
		transition-property: background-color, transform;
		width: $width;
		@if $border-radius != 0 {
			border-radius: $border-radius;
		}
		@if $sass-burger-add-vendor-prefixes {
			-moz-transition-property: background-color, -moz-transform;
			-o-transition-property: background-color, -o-transform;
			-webkit-transition-property: background-color, -webkit-transform;
		}
		@if $sass-burger-add-vendor-prefixes {
			-moz-transition-duration: $transition-duration;
			-o-transition-duration: $transition-duration;
			-webkit-transition-duration: $transition-duration;
		}
	}

	&::after,
	&::before {
		content: '';
		position: absolute;
	}

	&::before {
		top: -($height + $gutter);
	}

	&::after {
		top: $height + $gutter;
	}
}
// Select parts of the burger
@mixin burger-parts {
	&,
	&::after,
	&::before {
		@content;
	}
}

@mixin burger-top {
	&::before {
		@content;
	}
}

@mixin burger-middle {
	@content;
}

@mixin burger-bottom {
	&::after {
		@content;
	}
}
// Burger animations
@mixin burger-to-cross($color: auto) {
	background-color: transparent;

	@if ($color != auto) {
		&::after,
		&::before {
			background-color: $color;
		}
	}

	&::before {
		transform: translateY($burger-gutter + $burger-height) rotate(45deg);
		@if $sass-burger-add-vendor-prefixes {
			-moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
			-ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
			-o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
			-webkit-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
		}
	}

	&::after {
		transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
		@if $sass-burger-add-vendor-prefixes {
			-moz-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
			-ms-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
			-o-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
			-webkit-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
		}
	}
}

.burger-icon {
	@include burger(25px, 4px, 5px, #fff);
}

.burger-icon.active {
	@include burger-to-cross;
}
